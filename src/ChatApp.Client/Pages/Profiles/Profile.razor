@page "/profile"

<MudStack Row="false">
    <MudStack Row="true" Style="width: 100%">
        <MudCard>
            <MudCardHeader>
                Avatar
            </MudCardHeader>
            <MudCardContent>
                <MudCarousel SelectedIndex="SelectedAvatar" bind-SelectedIndex="SelectedAvatar" SelectedIndexChanged="DownloadAvatarAsync" Class="mud-width-full" Style="height:200px;" ShowArrows="true" ShowBullets="true" EnableSwipeGesture="true" AutoCycle="false" TData="object">
                    @foreach (var avatar in AvatarDtos)
                    {
                        <MudCarouselItem Transition="Transition.Slide" Color="@Color.Primary">
                            <div class="d-flex" style="height:100%">
                                <MudImage Src="@($"data:image/png;base64, {GetImageValue()}")" Class="mx-auto my-auto" Icon="@Icons.Custom.Brands.MudBlazor" Size="@Size.Large"/>
                            </div>
                        </MudCarouselItem>
                    }
                </MudCarousel>
            </MudCardContent>
            <MudCardActions>
                <MudIconButton Icon="@Icons.Material.Filled.Delete" OnClick="@(async () => await ProfileService.RemoveAvatarAsync(AvatarDtos[SelectedAvatar].ResourceId))" Color="Color.Error" aria-label="delete"></MudIconButton>
                <MudFileUpload T="IBrowserFile" OnFilesChanged="SetFile">
                    <ButtonTemplate>
                        <MudButton HtmlTag="label"
                                   Variant="Variant.Filled"
                                   Color="Color.Primary"
                                   for="@context.Id">
                            Choose
                        </MudButton>
                    </ButtonTemplate>
                </MudFileUpload>
                <MudIconButton Icon="@Icons.Material.Filled.Save" Color="Color.Primary" OnClick="@(async () => await ProfileService.AddAvatarAsync(File))"/>
            </MudCardActions>
        </MudCard>
        <MudCard Style="width: 100%">
            <MudForm>
                <MudCardHeader>
                    Information
                </MudCardHeader>
                <MudCardContent>
                    <MudTextField Variant="Variant.Filled" @bind-Value="Information.FirstName" T="string" Label="First name" Required="false"/>
                    <MudTextField Variant="Variant.Filled" @bind-Value="Information.LastName" T="string" Label="Last name" Required="false"/>
                    <MudTextField Lines="3" Variant="Variant.Filled" @bind-Value="Information.Bio" T="string" Label="Bio" Required="false"/>
                </MudCardContent>
                <MudCardActions>
                    <MudIconButton OnClick="@(async () => await ProfileService.UpdateNameAsync(Information))" Icon="@Icons.Material.Filled.Save" Color="Color.Primary" Class="ml-auto"/>
                </MudCardActions>
            </MudForm>
        </MudCard>
    </MudStack>
    <MudStack Row="true">
        <MudStack Row="false" Style="width: 100%">
            <MudCard Style="width: 100%">
                <MudForm>
                    <MudStack Row="true" AlignItems="AlignItems.Baseline">
                        <MudCardContent Style="width: 100%">
                            <MudForm>
                                <MudTextField Variant="Variant.Filled" @bind-Value="UserNameInput.UserName" T="string" Label="Username" Required="true"/>
                            </MudForm>
                        </MudCardContent>
                        <MudCardActions>
                            <MudIconButton OnClick="@(async () => await ProfileService.UpdateUserNameAsync(UserNameInput))" Icon="@Icons.Material.Filled.Save" Color="Color.Primary" Class="ml-auto"/>
                        </MudCardActions>
                    </MudStack>
                </MudForm>
            </MudCard>
            <MudCard Style="width: 100%">
                <MudForm>
                    <MudStack Row="true" AlignItems="AlignItems.Baseline">
                        <MudCardContent Style="width: 100%">
                            <MudForm>
                                <MudTextField Variant="Variant.Filled" @bind-Value="EmailInput.Email" T="string" Label="Email" Required="true"/>
                            </MudForm>
                        </MudCardContent>
                        <MudCardActions>
                            <MudIconButton OnClick="@SendEmailConfirmationAsync" Icon="@Icons.Material.Filled.Save" Color="Color.Primary" Class="ml-auto"/>
                        </MudCardActions>
                    </MudStack>
                </MudForm>
            </MudCard>
            <MudCard Style="width: 100%">
                <MudForm>
                    <MudStack Row="true" AlignItems="AlignItems.Baseline">
                        <MudCardContent Style="width: 100%">
                            <MudForm>
                                <MudTextField Variant="Variant.Filled" @bind-Value="PhoneNumberInput.PhoneNumber" T="string" Label="Phone number" Required="true"/>
                            </MudForm>
                        </MudCardContent>
                        <MudCardActions>
                            <MudIconButton OnClick="@SendPhoneConfirmationAsync" Icon="@Icons.Material.Filled.Save" Color="Color.Primary" Class="ml-auto"/>
                        </MudCardActions>
                    </MudStack>
                </MudForm>
            </MudCard>
        </MudStack>
        <MudCard Style="width: 100%">
            <MudForm>
                <MudStack Row="false">
                    <MudCardContent Style="width: 100%">
                        <MudForm>
                            <MudTextField InputType="InputType.Password" Variant="Variant.Filled" @bind-Value="PasswordInput.CurrentPassword" T="string" Label="Current password" Required="true"/>
                            <MudTextField @ref="pwField1" InputType="InputType.Password" Variant="Variant.Filled" @bind-Value="PasswordInput.NewPassword" T="string" Label="New password" Required="true"/>
                            <MudTextField InputType="InputType.Password" Variant="Variant.Filled" @bind-Value="PasswordInput.ConfirmNewPassword" T="string" Label="Confirm new password" Required="true"
                                          Validation="@(new Func<string, string>(PasswordMatch))"/>
                        </MudForm>
                    </MudCardContent>
                    <MudCardActions>
                        <MudIconButton OnClick="@(async () => await ProfileService.ChangePasswordAsync(PasswordInput))" Icon="@Icons.Material.Filled.Save" Color="Color.Primary" Class="ml-auto"/>
                    </MudCardActions>
                </MudStack>
            </MudForm>
        </MudCard>
    </MudStack>
</MudStack>