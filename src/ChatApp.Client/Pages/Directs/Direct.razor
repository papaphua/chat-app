@page "/direct/{directId:guid}"

<MudStack Justify="Justify.SpaceBetween" Row="false" Style="height: 100%">
    <MudPaper Style="padding: 20px; position: sticky">
        <MudStack AlignItems="AlignItems.Center" Justify="Justify.SpaceBetween" Row="true">
            <MudStack Row="true" Spacing="5" AlignItems="AlignItems.Center">
                @if (DirectDto.Avatars != null && DirectDto.Avatars.Count > 0)
                {
                    <MudAvatar Color="Color.Primary">
                        <MudImage Src="@($"data:image/png;base64, {Image}")"/>
                    </MudAvatar>
                }
                @if (DirectDto.Avatars == null || DirectDto.Avatars.Count == 0)
                {
                    <MudAvatar Color="Color.Primary">
                        @DirectDto.FirstName?[0]
                    </MudAvatar>
                }
                <MudText>
                    @DirectDto.FirstName @DirectDto.LastName
                </MudText>
            </MudStack>
            <MudStack>
                <MudIconButton Icon="@Icons.Material.Filled.MoreVert" Color="Color.Info"/>
            </MudStack>
        </MudStack>
    </MudPaper>
    <MudStack Reverse="true" Row="false" style="height: 80%; overflow-y: auto">
        <MudPagination bind-Selected="@_parameters.CurrentPage" Color="Color.Primary" Count="PagedData.TotalPages" SelectedChanged="@(async (int p) => await SetPage(p))"/>
        @foreach (var message in Messages)
        {
            <MudStack Row="false"  AlignItems="@(message.SenderId == DirectDto.UserId ? AlignItems.Start : AlignItems.End)">
                <MudPaper Style="padding: 20px" Class="mb-4">
                    <MudStack Row="true" Justify="Justify.SpaceBetween">
                        <div>
                            <MudText>
                                @message.Content
                            </MudText>
                            @foreach (var attachment in message.Attachments)
                            {
                                <MudImage Src="@($"data:image/png;base64, {GetImageValue(attachment.ResourceId)}")"/>
                            }
                        </div>
                        <MudText>
                            @message.Timestamp
                        </MudText>
                    </MudStack>
                </MudPaper>
            </MudStack>
        }
        <MudPagination bind-Selected="@_parameters.CurrentPage" Color="Color.Primary" Count="PagedData.TotalPages" SelectedChanged="@(async (int p) => await SetPage(p))"/>
    </MudStack>
    <MudPaper Style="padding: 20px; position: sticky;">
        <MudStack AlignItems="AlignItems.Center" Row="true">
            <MudTextField T="string" Variant="Variant.Filled" @bind-Text="Input" Lines="3"/>
            <MudFileUpload T="IBrowserFile" OnFilesChanged="SetFiles" multiple>
                <ButtonTemplate>
                    <MudIconButton HtmlTag="label"
                                   Size="Size.Large"
                                   Icon="@Icons.Material.Filled.Attachment"
                                   Style="rotate: 90deg"
                                   for="@context.Id"/>
                </ButtonTemplate>
            </MudFileUpload>
            <MudIconButton Color="Color.Primary"
                           OnClick="@(async () => await DirectService.AddMessageAsync(DirectId, Input, Files))"
                           Size="Size.Large" Icon="@Icons.Material.Filled.Send"/>
        </MudStack>
    </MudPaper>
</MudStack>